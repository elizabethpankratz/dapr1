[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "This is the homepage of DAPR1 labs. Please use the navigation bar above to go to your week’s content."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Dr Umberto Noe\nDr Josiah King\nDr Emma Waterston\nDepartment of Psychology, The University of Edinburgh"
  },
  {
    "objectID": "1_02_categorical_data.html",
    "href": "1_02_categorical_data.html",
    "title": "Categorical data",
    "section": "",
    "text": "In the first five weeks of the course you should produce a PDF report using Rmarkdown for which you will receive formative feedback in week 6. Throughout those weeks, you will be working with a simulated dataset arising from a lexical decision task, adapted from Nordmann et al. (2022).\nThe report should not include any reference to R code or functions, but be written or a generic reader who is only assumed to have a basic statistical understanding without any R knowledge. You should also avoid any R code output or printout in the PDF file.\n\nLexical Decision Task. One hundred participants were asked to decide whether a presented word was a real word or a non-word. The data include 100 rows (one for each participant) and 7 variables:\n\n\n\n\nVariable Name\nDescription\n\n\n\nid\nParticipant ID\n\n\nage\nAge\n\n\nlanguage\nLanguage group (1 = monolingual, 2 = bilingual)\n\n\nrt_word\nReaction time (ms) for word trials\n\n\nrt_nonword\nReaction time (ms) for non-word trials\n\n\nacc_word\nAccuracy for word trials\n\n\nacc_nonword\nAccuracy for non-word trials\n\n\n\n\n\nYou can download the data from this link: https://uoepsy.github.io/data/ldt_data.csv.\n\nFor formative report A, you will be asked to perform the following tasks, each related to a week of teaching in this course:\nA1) Read the data into R and inspect it\n\n\n\n\n\n\nThis week’s task\n\n\n\nA2) Display and describe the categorical data\n\n\nA3) Display and describe the numerical data\nA4) Display and describe a relationship of interest between two or three variables of your choice\nThis week you will only focus on task A2. Below there are some guided sub-steps you may want to consider to complete task A2.\n\n\n\n\n\n\n\nNote\n\n\n\nTo see the hints, hover your cursor on the superscript numbers.\n\n\n\nReopen last week’s Rmd file, as we will continue and build on last week’s work.1\nCreate a plot displaying the language distribution in the sample.2\nDescribe the language distribution in the sample.3\nCreate a new column showing the frequencies as percentages. Do you notice anything different with the actual frequencies? Why?4\nWhat is the mode of the distribution?5"
  },
  {
    "objectID": "1_02_categorical_data.html#worked-example",
    "href": "1_02_categorical_data.html#worked-example",
    "title": "Categorical data",
    "section": "Worked example",
    "text": "Worked example\nConsider the dataset available at https://uoepsy.github.io/data/RestaurantTips.csv, containing 157 observations on the following 7 variables:\n\n\n\n\n\n\n\n\nVariable Name\nDescription\n\n\n\nBill\nSize of the bill (in dollars)\n\n\nTip\nSize of the tip (in dollars)\n\n\nCredit\nPaid with a credit card? n or y\n\n\nGuests\nNumber of people in the group\n\n\nDay\nDay of the week: m=Monday, t=Tuesday, w=Wednesday, th=Thursday, or f=Friday\n\n\nServer\nCode for specific waiter/waitress: A, B, or C\n\n\nPctTip\nTip as a percentage of the bill\n\n\n\n\n\nThese data were collected by the owner of a bistro in the US, who was interested in understanding the tipping patterns of their customers. The data are adapted from Lock et al. (2020).\n\nlibrary(tidyverse)  # we use read_csv and glimpse from tidyverse\ntips <- read_csv(\"https://uoepsy.github.io/data/RestaurantTips.csv\")\n\nglimpse(tips)\n\nRows: 157\nColumns: 7\n$ Bill   <dbl> 23.70, 36.11, 31.99, 17.39, 15.41, 18.62, 21.56, 19.58, 23.59, …\n$ Tip    <dbl> 10.00, 7.00, 5.01, 3.61, 3.00, 2.50, 3.44, 2.42, 3.00, 2.00, 1.…\n$ Credit <chr> \"n\", \"n\", \"y\", \"y\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"…\n$ Guests <dbl> 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 3, 2, 2, 1, 5, 5, …\n$ Day    <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\"…\n$ Server <chr> \"A\", \"B\", \"A\", \"B\", \"B\", \"A\", \"B\", \"A\", \"A\", \"B\", \"B\", \"A\", \"B\"…\n$ PctTip <dbl> 42.2, 19.4, 15.7, 20.8, 19.5, 13.4, 16.0, 12.4, 12.7, 10.7, 11.…\n\ntips$Day <- factor(tips$Day, \n                   levels = c(\"m\", \"t\", \"w\", \"th\", \"f\"),\n                   labels = c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"))\n\ntips$Credit <- factor(tips$Credit, \n                      levels = c(\"n\", \"y\"),\n                      labels = c(\"No\", \"Yes\"))\n\ntips$Server <- factor(tips$Server)\n\nglimpse(tips)\n\nRows: 157\nColumns: 7\n$ Bill   <dbl> 23.70, 36.11, 31.99, 17.39, 15.41, 18.62, 21.56, 19.58, 23.59, …\n$ Tip    <dbl> 10.00, 7.00, 5.01, 3.61, 3.00, 2.50, 3.44, 2.42, 3.00, 2.00, 1.…\n$ Credit <fct> No, No, Yes, Yes, No, No, No, No, No, No, No, No, No, No, No, N…\n$ Guests <dbl> 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 3, 2, 2, 1, 5, 5, …\n$ Day    <fct> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Friday,…\n$ Server <fct> A, B, A, B, B, A, B, A, A, B, B, A, B, B, B, B, C, C, C, C, C, …\n$ PctTip <dbl> 42.2, 19.4, 15.7, 20.8, 19.5, 13.4, 16.0, 12.4, 12.7, 10.7, 11.…\n\ntips <- tips %>%\n    mutate(\n        PctTip = ifelse(PctTip > 100, NA, PctTip)\n    )\n\n\nplt_credit <- ggplot(tips, aes(x = Credit)) +\n    geom_bar() +\n    labs(x = \"Paid by credit card?\")\nplt_credit\n\n\n\n\nYou can even flip the bars if you wished to:\n\nggplot(tips, aes(x = Credit)) +\n    geom_bar() +\n    labs(x = \"Paid by credit card?\") +\n    coord_flip()\n\n\n\n\nYou can use the patchwork package to place graphs side by side. Simply create an object for each graph, and concatenate the objects with | for horizontal concatenation and / for vertical concatenation of graphs.\n\n\n\n\n\n\nRotate x-axis labels\n\n\n\nTo rotate x-axis labels, you can use this code: theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\nDon’t worry, no one remembers it, and people always google “rotate x-axis labels ggplot” to find it.\n\n\n\nlibrary(patchwork)\n\nplt1 <- ggplot(tips, aes(x = Credit)) +\n    geom_bar() +\n    labs(x = \"Paird by credit card?\")\n\nplt2 <- ggplot(tips, aes(x = Day)) +\n    geom_bar() +\n    labs(x = \"Day of week\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))\n\nplt3 <- ggplot(tips, aes(x = Server)) +\n    geom_bar()\n\nplt1 | plt2 | plt3\n\n\n\n\n\n\nRun install.packages(\"patchwork\") first in your R console\n\ntbl_credit <- tips %>%\n    count(Credit) %>%\n    mutate(perc = round((n / sum(n)) * 100, 2))\ntbl_credit\n\n# A tibble: 2 × 3\n  Credit     n  perc\n  <fct>  <int> <dbl>\n1 No       106  67.5\n2 Yes       51  32.5\n\n\n\ntbl_day <- tips %>%\n    count(Day) %>%\n    mutate(perc = round((n / sum(n)) * 100, 2))\ntbl_day\n\n# A tibble: 5 × 3\n  Day           n  perc\n  <fct>     <int> <dbl>\n1 Monday       20 12.7 \n2 Tuesday      13  8.28\n3 Wednesday    62 39.5 \n4 Thursday     36 22.9 \n5 Friday       26 16.6 \n\n\n\ntbl_server <- tips %>%\n    count(Server) %>%\n    mutate(perc = round((n / sum(n)) * 100, 2))\ntbl_server\n\n# A tibble: 3 × 3\n  Server     n  perc\n  <fct>  <int> <dbl>\n1 A         60  38.2\n2 B         65  41.4\n3 C         32  20.4\n\n\nYou can create nice tables with the kable command or the pander command:\n\nlibrary(kableExtra)\n\nkable(tbl_credit) %>% kable_styling(full_width = FALSE)\n\n\n\n\n Credit \n    n \n    perc \n  \n\n\n No \n    106 \n    67.52 \n  \n\n Yes \n    51 \n    32.48 \n  \n\n\n\nkable(tbl_day) %>% kable_styling(full_width = FALSE)\n\n\n\n\n Day \n    n \n    perc \n  \n\n\n Monday \n    20 \n    12.74 \n  \n\n Tuesday \n    13 \n    8.28 \n  \n\n Wednesday \n    62 \n    39.49 \n  \n\n Thursday \n    36 \n    22.93 \n  \n\n Friday \n    26 \n    16.56 \n  \n\n\n\nkable(tbl_server) %>% kable_styling(full_width = FALSE)\n\n\n\n\n Server \n    n \n    perc \n  \n\n\n A \n    60 \n    38.22 \n  \n\n B \n    65 \n    41.40 \n  \n\n C \n    32 \n    20.38 \n  \n\n\n\nkable(list(tbl_credit, tbl_day, tbl_server)) %>%\n    kable_styling()\n\n\n\n \n\n\n\n Credit \n    n \n    perc \n  \n\n\n No \n    106 \n    67.52 \n  \n\n Yes \n    51 \n    32.48 \n  \n\n\n\n    \n\n\n\n Day \n    n \n    perc \n  \n\n\n Monday \n    20 \n    12.74 \n  \n\n Tuesday \n    13 \n    8.28 \n  \n\n Wednesday \n    62 \n    39.49 \n  \n\n Thursday \n    36 \n    22.93 \n  \n\n Friday \n    26 \n    16.56 \n  \n\n\n\n    \n\n\n\n Server \n    n \n    perc \n  \n\n\n A \n    60 \n    38.22 \n  \n\n B \n    65 \n    41.40 \n  \n\n C \n    32 \n    20.38 \n  \n\n\n\n  \n\n\nFrom the univariate distribution (or marginal distribution) of each categorical variable we see that the most common payment method was not a credit card, and the most common day of the week to dine at that restaurant was wednesday. Finally, the most common server among the parties was B.\n\n\nThe most common value is the mode."
  },
  {
    "objectID": "1_02_categorical_data.html#student-glossary",
    "href": "1_02_categorical_data.html#student-glossary",
    "title": "Categorical data",
    "section": "Student Glossary",
    "text": "Student Glossary\nTo conclude the lab, add the new functions to the glossary of R functions that you started last week.\n\n\nFunction\nUse & Package\n\n\n\n%>%\n?\n\n\ngeom_bar\n?\n\n\ncount\n?\n\n\nmutate\n?\n\n\nsum\n?\n\n\nround\n?"
  },
  {
    "objectID": "1_01_design_and_data.html",
    "href": "1_01_design_and_data.html",
    "title": "Research design & data",
    "section": "",
    "text": "Did you register for RStudio Server Online?\n\n\n\nIf yes:\nYou can move on to the next tip.\nIf not, try this first:\n\nLog in to EASE https://www.ease.ed.ac.uk/ using your university UUN and password.\n\n\nIf you haven’t done it before: set your RStudio password here https://rstudio.ppls.ed.ac.uk/setpass.php, the username will be the same as your UUN (make sure you type your UUN correctly).\n\nAccess the server from https://rstudio.ppls.ed.ac.uk.\n\nIf that didn’t work:\nFill out this form to be added to the server, and wait for an email from us. This can take up to 3 working days.\n\n\n\n\n\n\n\n\nLab instructions\n\n\n\n\nPlease work through the lab exercises in groups of 4 students.\nOpen an Rmd file, and start writing your answers in there.\nYou will be given some data that you will use throughout the next 5 weeks to produce a data analysis report on those data.\n\nIn week 5, you will be asked to write up your explorations and produce a report in PDF format, which you will show to tutors in week 6 and receive formative feedback.\n\n\n\n\n\n\n\n\n\nLab help & support\n\n\n\nThe lab is structured to provide various levels of support. When attending the labs, you should directly attempt and work on the tasks. However, if you are unsure or stuck at any point, you can make use of the following help:\n\nSimply raise your hand and get help from a tutor\nHover your mouse on the superscript number to get a hint. The hints may sometimes show multiple equivalent ways of getting an answer - you just need one way\nScroll down to the Worked Example section, where you can read through a worked example.\n\n\n\n\n\n\n\n\n\nInstall tinytex\n\n\n\nBefore you begin, make sure you have tinytex installed in R so that you can “Knit” your Rmd document to a PDF file:\n\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()"
  },
  {
    "objectID": "1_01_design_and_data.html#formative-report-a",
    "href": "1_01_design_and_data.html#formative-report-a",
    "title": "Research design & data",
    "section": "Formative report A",
    "text": "Formative report A\nIn the first five weeks of the course you should produce a PDF report using Rmarkdown for which you will receive formative feedback in week 6. Throughout those weeks, you will be working with a simulated dataset arising from a lexical decision task, adapted from Nordmann et al. (2022).\nThe report should not include any reference to R code or functions, but be written or a generic reader who is only assumed to have a basic statistical understanding without any R knowledge. You should also avoid any R code output or printout in the PDF file.\nData\nLexical Decision Task. One hundred participants were asked to decide whether a presented word was a real word or a non-word. The data include 100 rows (one for each participant) and 7 variables:\n\n\n\n\nVariable Name\nDescription\n\n\n\nid\nParticipant ID\n\n\nage\nAge\n\n\nlanguage\nLanguage group (1 = monolingual, 2 = bilingual)\n\n\nrt_word\nReaction time (ms) for word trials\n\n\nrt_nonword\nReaction time (ms) for non-word trials\n\n\nacc_word\nAccuracy for word trials\n\n\nacc_nonword\nAccuracy for non-word trials\n\n\n\n\n\nYou can download the data from this link: https://uoepsy.github.io/data/ldt_data.csv.\nTasks\nFor formative report A, you will be asked to perform the following tasks, each related to a week of teaching in this course:\n\n\n\n\n\n\nThis week’s task\n\n\n\nA1) Read the data into R and inspect it\n\n\nA2) Display and describe the categorical data\nA3) Display and describe the numerical data\nA4) Display and describe a relationship of interest between two or three variables of your choice\nThis week you will only focus on task A1. Below there are some guided sub-steps you may want to consider to complete task A1.\nA1 sub-tasks\n\n\n\n\n\n\nNote\n\n\n\nTo see the hints, hover your cursor on the superscript numbers.\n\n\n\nRead the lexical decision task data into R and inspect at the data. By inspect, we literally mean to look at the data in RStudio. You don’t need to show the full data in the report.1\nHow many observations are there?2\nHow many variables are there?3\nWhat is the type of each variable?4\n\n\n\n\n\n\n\nThink about it\n\n\n\n\n\nWhat does dim(<dataset name>) return instead?\nWhat is the function of appending a [1] or [2]?\n\n\n\n\nWhat’s the minimum and maximum age in the sample? What about the average age?5\nDo you notice any issues with the ages? Look at your data and come up with a possible reason why the results are strange.6\nThe language variable appears to contain numbers. Do those numbers correspond to an amount or an attribute? Convert that variable to the appropriate type and provide more descriptive labels.7"
  },
  {
    "objectID": "1_01_design_and_data.html#worked-example",
    "href": "1_01_design_and_data.html#worked-example",
    "title": "Research design & data",
    "section": "Worked example",
    "text": "Worked example\nConsider the dataset available at https://uoepsy.github.io/data/RestaurantTips.csv, containing 157 observations on the following 7 variables:\n\n\n\n\n\n\n\n\nVariable Name\nDescription\n\n\n\nBill\nSize of the bill (in dollars)\n\n\nTip\nSize of the tip (in dollars)\n\n\nCredit\nPaid with a credit card? n or y\n\n\nGuests\nNumber of people in the group\n\n\nDay\nDay of the week: m=Monday, t=Tuesday, w=Wednesday, th=Thursday, or f=Friday\n\n\nServer\nCode for specific waiter/waitress: A, B, or C\n\n\nPctTip\nTip as a percentage of the bill\n\n\n\n\n\nThese data were collected by the owner of a bistro in the US, who was interested in understanding the tipping patterns of their customers. The data are adapted from Lock et al. (2020).\n\nlibrary(tidyverse)  # we use read_csv and glimpse from tidyverse\n\n\ntips <- read_csv(\"https://uoepsy.github.io/data/RestaurantTips.csv\")\nhead(tips)\n\n# A tibble: 6 × 7\n   Bill   Tip Credit Guests Day   Server PctTip\n  <dbl> <dbl> <chr>   <dbl> <chr> <chr>   <dbl>\n1  23.7 10    n           2 f     A        42.2\n2  36.1  7    n           3 f     B        19.4\n3  32.0  5.01 y           2 f     A        15.7\n4  17.4  3.61 y           2 f     B        20.8\n5  15.4  3    n           2 f     B        19.5\n6  18.6  2.5  n           2 f     A        13.4\n\n\n\n\nhead() shows by default the top 6 rows of the data. Use the n = ... option, e.g. head(<data>, n = 10) to change the default behaviour.\n\ndim(tips)\n\n[1] 157   7\n\n\n\n\nThis returns the number of rows and columns\n\nglimpse(tips)\n\nRows: 157\nColumns: 7\n$ Bill   <dbl> 23.70, 36.11, 31.99, 17.39, 15.41, 18.62, 21.56, 19.58, 23.59, …\n$ Tip    <dbl> 10.00, 7.00, 5.01, 3.61, 3.00, 2.50, 3.44, 2.42, 3.00, 2.00, 1.…\n$ Credit <chr> \"n\", \"n\", \"y\", \"y\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\", \"n\"…\n$ Guests <dbl> 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 3, 2, 2, 1, 5, 5, …\n$ Day    <chr> \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\", \"f\"…\n$ Server <chr> \"A\", \"B\", \"A\", \"B\", \"B\", \"A\", \"B\", \"A\", \"A\", \"B\", \"B\", \"A\", \"B\"…\n$ PctTip <dbl> 42.2, 19.4, 15.7, 20.8, 19.5, 13.4, 16.0, 12.4, 12.7, 10.7, 11.…\n\n\n\n\nglimpse is part of the tidyverse package\n\n\n\n\n\n\nAlternative\n\n\n\n\n\nAlternatives to glimpse are the data “structure” function:\n\nstr(tips)\n\nspec_tbl_df [157 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Bill  : num [1:157] 23.7 36.1 32 17.4 15.4 ...\n $ Tip   : num [1:157] 10 7 5.01 3.61 3 2.5 3.44 2.42 3 2 ...\n $ Credit: chr [1:157] \"n\" \"n\" \"y\" \"y\" ...\n $ Guests: num [1:157] 2 3 2 2 2 2 2 2 2 2 ...\n $ Day   : chr [1:157] \"f\" \"f\" \"f\" \"f\" ...\n $ Server: chr [1:157] \"A\" \"B\" \"A\" \"B\" ...\n $ PctTip: num [1:157] 42.2 19.4 15.7 20.8 19.5 13.4 16 12.4 12.7 10.7 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Bill = col_double(),\n  ..   Tip = col_double(),\n  ..   Credit = col_character(),\n  ..   Guests = col_double(),\n  ..   Day = col_character(),\n  ..   Server = col_character(),\n  ..   PctTip = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nor:\n\nsapply(tips, data.class)\n\n       Bill         Tip      Credit      Guests         Day      Server \n  \"numeric\"   \"numeric\" \"character\"   \"numeric\" \"character\" \"character\" \n     PctTip \n  \"numeric\" \n\n\n\n\n\n\n\n\n\n\n\nExample writeup\n\n\n\nThe data contains measurements for a total of 157 parties on four numeric variables: size of the bill (in dollars), size of the tip, number of guests in the group, and tip as a percentage of the bill total. The data also includes three categorical variables indicating whether or not the party paid with a credit card, the day of the week, as well as a server-specific identifier.\n\n\n\nsummary(tips)\n\n      Bill            Tip            Credit              Guests     \n Min.   : 1.66   Min.   : 0.250   Length:157         Min.   :1.000  \n 1st Qu.:15.19   1st Qu.: 2.075   Class :character   1st Qu.:2.000  \n Median :20.22   Median : 3.340   Mode  :character   Median :2.000  \n Mean   :22.73   Mean   : 3.807                      Mean   :2.096  \n 3rd Qu.:28.84   3rd Qu.: 5.000                      3rd Qu.:2.000  \n Max.   :70.51   Max.   :15.000                      Max.   :7.000  \n                 NA's   :1                                          \n     Day               Server              PctTip      \n Length:157         Length:157         Min.   :  6.70  \n Class :character   Class :character   1st Qu.: 14.30  \n Mode  :character   Mode  :character   Median : 16.20  \n                                       Mean   : 17.89  \n                                       3rd Qu.: 18.20  \n                                       Max.   :221.00  \n                                                       \n\n\n\n\nsummary returns a quick summary of the data.\nYou probably won’t understand some parts of the output above, but we will learn more in the coming weeks, so don’t worry too much about it. For the moment, you should be able to understand the minimum, maximum, and the mean.\nCurrently, it is not showing very informative output for the categorical variables.\nWe can replace each factor level with a clearer label:\n\ntips$Day <- factor(tips$Day, \n                   levels = c(\"m\", \"t\", \"w\", \"th\", \"f\"),\n                   labels = c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"))\n\ntips$Credit <- factor(tips$Credit, \n                      levels = c(\"n\", \"y\"),\n                      labels = c(\"No\", \"Yes\"))\n\ntips$Server <- factor(tips$Server)\n\n\n\n\n\n\n\nAlternative\n\n\n\n\n\nUsing tidyverse:\n\ntips <- tips %>%\n    mutate(\n        Day = factor(Day,\n                     levels = c(\"m\", \"t\", \"w\", \"th\", \"f\"),\n                     labels = c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\")),\n        Credit = factor(Credit,\n                        levels = c(\"n\", \"y\"),\n                        labels = c(\"No\", \"Yes\")),\n        Server = factor(Server)\n    )\n\nThe functions %>% and mutate are part of the tidyverse package. The former, %>%, is called pipe.\n\n\n\nLet’s check the result of the changes to the variable types:\n\nglimpse(tips)\n\nRows: 157\nColumns: 7\n$ Bill   <dbl> 23.70, 36.11, 31.99, 17.39, 15.41, 18.62, 21.56, 19.58, 23.59, …\n$ Tip    <dbl> 10.00, 7.00, 5.01, 3.61, 3.00, 2.50, 3.44, 2.42, 3.00, 2.00, 1.…\n$ Credit <fct> No, No, Yes, Yes, No, No, No, No, No, No, No, No, No, No, No, N…\n$ Guests <dbl> 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 3, 2, 2, 1, 5, 5, …\n$ Day    <fct> Friday, Friday, Friday, Friday, Friday, Friday, Friday, Friday,…\n$ Server <fct> A, B, A, B, B, A, B, A, A, B, B, A, B, B, B, B, C, C, C, C, C, …\n$ PctTip <dbl> 42.2, 19.4, 15.7, 20.8, 19.5, 13.4, 16.0, 12.4, 12.7, 10.7, 11.…\n\n\n\nsummary(tips)\n\n      Bill            Tip         Credit        Guests             Day    \n Min.   : 1.66   Min.   : 0.250   No :106   Min.   :1.000   Monday   :20  \n 1st Qu.:15.19   1st Qu.: 2.075   Yes: 51   1st Qu.:2.000   Tuesday  :13  \n Median :20.22   Median : 3.340             Median :2.000   Wednesday:62  \n Mean   :22.73   Mean   : 3.807             Mean   :2.096   Thursday :36  \n 3rd Qu.:28.84   3rd Qu.: 5.000             3rd Qu.:2.000   Friday   :26  \n Max.   :70.51   Max.   :15.000             Max.   :7.000                 \n                 NA's   :1                                                \n Server     PctTip      \n A:60   Min.   :  6.70  \n B:65   1st Qu.: 14.30  \n C:32   Median : 16.20  \n        Mean   : 17.89  \n        3rd Qu.: 18.20  \n        Max.   :221.00  \n                        \n\n\n\n\nAfter making categorical variables factors, summary shows the count of each category for the categorical variables.\nThe percentage of total bill has a maximum value of 221, which seems very strange. Someone is very unlikely to tip more than their bill total. In this case 221% of their bill value seems unlikely.\nLet’s inspect the row where PctTip is greater than 100:\n\ntips[tips$PctTip > 100, ]\n\n# A tibble: 1 × 7\n   Bill   Tip Credit Guests Day      Server PctTip\n  <dbl> <dbl> <fct>   <dbl> <fct>    <fct>   <dbl>\n1  49.6    NA Yes         4 Thursday C         221\n\n\n\n\n\n\n\n\nAlternative\n\n\n\n\n\nAlternatively, using tidyverse:\n\ntips %>% \n    filter(PctTip > 100)\n\n# A tibble: 1 × 7\n   Bill   Tip Credit Guests Day      Server PctTip\n  <dbl> <dbl> <fct>   <dbl> <fct>    <fct>   <dbl>\n1  49.6    NA Yes         4 Thursday C         221\n\n\n\n\n\nWith a bill of 49.59, the tip would be 109.59 dollars:\n\n49.59 * 221 / 100\n\n[1] 109.5939\n\n\nFurthermore, we also notice that the tipping amount is not available (NA). The corresponding value in the percentage of total tip seems likely an inputting error, perhaps due to double typing the leading 2 when recording the data. We will set that value to not available (NA) with the following code:\n\ntips$PctTip[tips$PctTip > 100] <- NA\n\n\n\na > b tests whether a is greater than b. a < b tests whether a is smaller than b. a == b tests whether a is equal to b; notice the double equal sign! You can also use >= or <=\n\n\n\n\n\n\nAlternative\n\n\n\n\n\nAlternatively you can use tidyverse:\n\ntips <- tips %>%\n    mutate(\n        PctTip = ifelse(PctTip > 100, NA, PctTip)\n    )\n\n\n\n\n\nsummary(tips)\n\n      Bill            Tip         Credit        Guests             Day    \n Min.   : 1.66   Min.   : 0.250   No :106   Min.   :1.000   Monday   :20  \n 1st Qu.:15.19   1st Qu.: 2.075   Yes: 51   1st Qu.:2.000   Tuesday  :13  \n Median :20.22   Median : 3.340             Median :2.000   Wednesday:62  \n Mean   :22.73   Mean   : 3.807             Mean   :2.096   Thursday :36  \n 3rd Qu.:28.84   3rd Qu.: 5.000             3rd Qu.:2.000   Friday   :26  \n Max.   :70.51   Max.   :15.000             Max.   :7.000                 \n                 NA's   :1                                                \n Server     PctTip     \n A:60   Min.   : 6.70  \n B:65   1st Qu.:14.30  \n C:32   Median :16.15  \n        Mean   :16.59  \n        3rd Qu.:18.05  \n        Max.   :42.20  \n        NA's   :1      \n\n\n\n\n\n\n\n\nExample writeup\n\n\n\nThe average bill size was $22.73, and the average tip was $3.85, corresponding to roughly 17% of the total bill. Out of 157 parties, only 51 paid with a credit card. Most parties tended to be of around 2 people each, and people tended to go to that restaurant more often on Wednesday. Among the three servers, server C was the one that served the least number of parties. The data also included a missing tipping value, corresponding to a bill $49.59, and a data inputting error for the corresponding measure of the tip as a percentage of the total bill."
  },
  {
    "objectID": "1_01_design_and_data.html#student-glossary",
    "href": "1_01_design_and_data.html#student-glossary",
    "title": "Research design & data",
    "section": "Student Glossary",
    "text": "Student Glossary\nTo conclude the lab, create a glossary of R functions. You can do so by opening Microsoft Word, Excel, or OneNote and creating a table with two columns: one where you should write the name of an R function, and the other column where you should provide a brief description of what the function does.\nThis “do it yourself” glossary is an opportunity for you to revise what you have learned in today’s lab and write down a few take-home messages. You will find this glossary handy as a reference to keep next to you when you will be doing the assessed weekly quizzes.\nBelow you can find an example to get you started:\n\n\n\n\n\n\nFunction\nUse & Package\n\n\n\nread_csv\nFor reading comma separated value files. Part of tidyverse package\n\n\nView\n?\n\n\nhead\n?\n\n\nnrow\n?\n\n\nncol\n?\n\n\ndim\n?\n\n\nglimpse\n?\n\n\nstr\n?\n\n\nsummary\n?\n\n\nfactor\n?"
  }
]