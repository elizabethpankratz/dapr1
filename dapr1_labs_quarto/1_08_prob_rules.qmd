---
title: "Probability Rules"
subtitle: "Semester 1 - Week 8"
callout-appearance: simple
---

```{r setup}
#| include: false

source('assets/setup.R')
library(tidyverse)

movies <- read_csv("https://uoepsy.github.io/data/hollywood_movies_subset.csv")

movies2 <- movies %>%
    filter(Genre %in% c("Drama", "Action", "Comedy")) %>%
    mutate(Rating = ifelse(AudienceScore <= 50, 'Bad', 'Good')) %>%
    mutate(Genre = factor(Genre),
           Rating = factor(Rating))

movies_prop <- table(movies2$Genre, movies2$Rating) %>%
    prop.table() %>%
    addmargins()
movies_prop

movies_prop[, 2] / movies_prop[, 3]

library(ggmosaic)
m_plot <- ggplot(movies2) +
    geom_mosaic(aes(x = product(Rating), fill = Rating, conds = product(Genre)))
m_plot


##
movies2$weight = ifelse(movies2$Genre == "Comedy", 3, 1)
movies3 <- slice_sample(movies2, n = 1000, replace = TRUE, weight_by = weight)

library(ggmosaic)
library(patchwork)
(ggplot(movies3) +
    geom_mosaic(aes(x = product(Rating), fill = Rating, conds = product(Genre))) ) /
(ggplot(movies3) +
    geom_mosaic(aes(x = product(Rating, Genre), fill = Rating)))
```


## Formative Report B

::: {.callout-important}
Instructions and data were released in [week 7](1_07_prob_theory.html).
:::


### Tasks

For formative report B, you will be asked to perform the following tasks, each related to a week of teaching in this course.  
This week's task is highlighted in bold below. Please only focus on completing that task this week. In the next section, you will also find the guided sub-steps that you need to consider to complete this week's task.

> B1) Create a new categorical variable, Rating, taking the value 'Good' if the audience score is > 50, and 'Bad' otherwise. Inspect and describe the joint probability distribution of movie genre and rating.  
> **B2) Investigate if a movie receiving a good rating is independent of the genre.**  
> B3) Computing and plotting probabilities with a binomial distribution.  
> B4) Computing and plotting probabilities with a normal distribution.  
> B5) Plot standard error of the mean, and finish the report write-up (i.e., knit to PDF, and submit the PDF for formative feedback).  



### B2 sub-tasks

__This week you will only focus on task B2.__ Below there are sub-steps you need to consider to complete task B2.

:::{.column-margin}
:::{.callout-tip}
#### Tip

To see the hints, hover your cursor on the superscript numbers.
:::
:::

::: {.callout-important}
In the report write-up do not include the intermediate working to compute the probabilities required, it's sufficient to define the probability and give the final result.
:::


```{r, results='hide', echo = FALSE, message = FALSE}
# sort the frequency table
sort(table(starwars$species))
    
# or, for decreasing order, you can use:
sort(table(starwars$species), decreasing = TRUE)
    
# keep only the rows where species is Human, Droid, Wookiee, or Ewok
# in R, or is the vertical bar |
starwars2 <- starwars %>% 
     filter(species == "Human" | species ==  "Droid" | species == "Wookiee" | species == "Ewok")

starwars2 <- starwars2 %>%
    mutate(size = ifelse(height < 180, 's', 't'))

starwars2$size <- factor(starwars2$size,
                        levels = c("s", "t"),
                        labels = c("short", "tall"))

starwars2$species <- factor(starwars2$species)

swars_rel_freq_sum <- table(starwars2$species, starwars2$size) %>%
        prop.table() %>%
        addmargins()

swars_rel_freq_sum

starwars2 <- starwars2 %>%
    drop_na(size) %>%
    mutate(size = factor(size))
```

- Reopen last week's Rmd file, as you will continue working on last week's data about the top 3 most frequent movie genres, and their ratings.[^share-file]

[^share-file]: Hint: Ask last week's driver for the Rmd file, they should share it with the group via the group discussion space or email. To download the file from the server, go to the RStudio Files pane, tick the box next to the Rmd file, and select More > Export.

- What’s the probability of a movie being rated as Good, i.e. $P(Good)$?[^p-good]

[^p-good]: Hint: For the starwars example data, if we were to ask what is the probability of a species being short, i.e. P(short), we would calculate the following: 

    P(Droid ∩ short) + P(Ewok ∩ short) + P(Human ∩ short) + P(Wookiee ∩ short) = 0.10256410 + 0.02564103 + 0.38461538 + 0.00000000 = 0.51282051 ≈ 0.51.
                 
    Alternatively, we would use look in the "Sum" value under the "short" column of our table. 

    ```{r}
    swars_rel_freq_sum
    ```
    
    We can say: the probability of a Starwars character being short was P(short) = 0.51.

- Given that a viewer watched a Drama movie, what's the probability of them giving a good rating, i.e. $P(Good \mid Drama)$?[^p-genre-good]

[^p-genre-good]: Hint: For the starwars example data, if we were to ask what is the probability of being short for the Human species, i.e. P(short | human), we could calculate the following:

    P(short | human) = P(short ∩ human) / P(human) = (0.38461538 / 0.79487179) = 0.483871 ≈ 0.48. 
    
    ```{r}
    swars_rel_freq_sum
    # P(short | human) = P(short ∩ human) / P(human) = 
    # (0.38461538 / 0.79487179) = 0.483871 ≈ 0.48 
    ```
    
    We can say: given that a viewer watched a drama movie, the probability that they rated it as good was 0.48.

- Given that a viewer watched an Action movie, what's the probability of them giving a good rating, i.e. $P(Good \mid Action)$?

- Given that a viewer watched a Comedy movie, what's the probability of them giving a good rating, i.e. $P(Good \mid Comedy)$?

<!-- - What’s the probability of a rater watching a Drama movie **or** rating a movie as Bad?[^p-dr-bad] -->

<!-- [^p-dr-bad]: Hint: If we were to ask what is the probability of a species being Droid or being tall, i.e. P(Droid ∪ tall), we would compute the probability as: -->

<!--     P(Droid ∪ tall) = P(Droid) + P(tall) - P(Droid ∩ tall) -->

<!--     ```{r} -->
<!--     swars_rel_freq_sum -->
<!--     # P(Droid) = 0.12820513 -->
<!--     # P(tall) = 0.48717949 -->
<!--     # P(Droid ∩ tall) = 0.02564103 -->

<!--     # P(Droid ∪ tall) = P(Droid) + P(tall) - P(Droid ∩ tall) =  -->
<!--     # 0.12820513 + 0.48717949 - 0.02564103 = 0.5897436 ≈ 0.59 -->
<!--     ``` -->

- Do you think that a movie receiving a Good rating is independent of the Genre?[^genre-indep]

[^genre-indep]: Hint: Recall that we say that two events $A$ and $B$ are independent if knowing that one occurred doesn’t change the probability of the other occurring, i.e. $P(A | B) = P(A)$. 

    In the starwars example, we would say that being short seem to be dependent on the species, given that the conditional probabilities are different from P(short). For example, the probability of being short for Ewoks and Droids is much higher than P(short):

    ```{r}
    #P(short) ≈ 0.51
    #P(short | droid) ≈ 0.80
    #P(short | ewok) ≈ 1
    #P(short | human) ≈ 0.48
    #P(short | wookiee) ≈ 0
    ```


- Now let's move on from independence. Given that a viewer gave a bad rating, what’s the probability of them having watched a non-drama movie? [^p-bad]

[^p-bad]: Hint: For the Starwars example data, if we were to ask what is the probability of a character being not a human given they are short, we could calculate the following:

    ```{r}
    swars_rel_freq_sum
    # P((~human) | short) =
    # (P(droid ∩ short) + P(ewok ∩ short) + P(wookiee ∩ short)) / P(short) =
    # (0.10256410 + 0.02564103 + 0.00000000) / 0.51282051 = 0.25
    ```
    
    Given that a Starwars character is short, the probability that they are a non-human is 0.25.


::: {.callout-note collapse="true"}
### Advanced material

Consider three mutually exclusive events $A_1, A_2, A_3$ and another event $B$.

We have that:

$$
\begin{aligned}
P\big((\sim A_3) | B\big)
&= P\big( (A_1 \cup A_2) | B \big) \\
&= \frac{P\big((A_1 \cup A_2) \cap B\big)}{P(B)} \\
&= \frac{P\big((A_1 \cap B) \cup (A_2 \cap B)\big)}{P(B)} \\
&= \frac{P(A_1 \cap B) + P(A_2 \cap B)}{P(B)}
\end{aligned}
$$

Suppose $A_1 = Action$, $A_2 = Comedy$, $A_3 = Drama$, and $B = Bad$.

$$
\begin{aligned}
P\big((\sim Drama) \mid Bad\big)
&= P\big( (Action \cup Comedy) \mid Bad \big) \\
&= \frac{P\big((Action \cup Comedy) \cap Bad\big)}{P(Bad)} \\
&= \frac{P\big((Action \cap Bad) \cup (Comedy \cap Bad)\big)}{P(Bad)} \\
&= \frac{P(Action \cap Bad) + P(Comedy \cap Bad)}{P(Bad)}
\end{aligned}
$$

:::


- Based on your analysis above, which movie Genre do you think lead studios should invest in for their next movie?[^genre-invest]

[^genre-invest]: Hint: Here it would be useful to think about which movie genre offers the best audience experience - lead studios will likely want to invest in making movies in Genres that people enjoy watching!

- Using a conditional mosaic plot, display the conditional distribution of movie genres being rated as either good or bad, making sure to add a main title and clear axis titles.[^func-mosaic]

[^func-mosaic]: Hint: Make sure to load the `ggmosaic` package so that you can specify `geom_mosaic()` when building your plot. To add a title, as well as x- and y-axis titles, specify `labs(title = , x = , y = )`. This week we will also need to specify the `conds()` argument. 

    Example: For the `starwars` dataset, I create a mosaic plot using the following code, and specify conds() within my aes() argument:

    ```{r}
    #| label: fig-swars1
    #| fig-cap: "Starwars Mosaic Plot Example Title"
    library(ggmosaic)
    m_plot <- ggplot(starwars2) +
        geom_mosaic(aes(x = product(size), fill = size, conds = product(species))) +
        labs(title = "Starwars Conditional Mosaic Plot Example", 
             x = "Species", 
             y = "Size",
             fill = "Size")
    m_plot
    ```

- In the analysis section of your report, write up a summary of what you have reported above, using proper rounding to 2 decimal places and avoiding any reference to R code or functions. In particular, focus on whether events were independent, and which genre of movie lead studios should consider investing in based on audience ratings.[^proper-notation] 

[^proper-notation]: Hint: You may want to consider using proper notation in your write-up (as you have seen in lectures). To do so, you can use `$ name $`. For example, if I wanted to specify the general addition rule, in the main Rmd file (i.e., not a code chunk) I could write `$P(A \cup B) = P(A) + P(B) - P(A \cap B)$`. This would render in my main file as:

    $P(A \cup B) = P(A) + P(B) - P(A \cap B)$
    
    To get the $\cup$ symbol, use the command `$A \cup B$`.
    
    To get the $\cap$ symbol, use the command `$A \cap B$`.
    
    


## Worked Example

Consider the dataset available at <https://uoepsy.github.io/data/RestaurantTips.csv>, containing 157 observations on the following 7 variables:

```{r, echo=FALSE}
library(tidyverse)
library(kableExtra)

tribble(
    ~'Variable Name', ~'Description',
    'Bill', 'Size of the bill (in dollars)',
    'Tip', 'Size of the tip (in dollars)',
    'Credit', 'Paid with a credit card? n or y',
    'Guests', 'Number of people in the group',
    'Day', 'Day of the week: m=Monday, t=Tuesday, w=Wednesday, th=Thursday, or f=Friday',
    'Server', 'Code for specific waiter/waitress: A, B, or C',
    'PctTip', 'Tip as a percentage of the bill'
) %>%
    kbl() %>%
    kable_styling(full_width = FALSE)
```

These data were collected by the owner of a bistro in the US, who was interested in understanding the tipping patterns of their customers. The data are adapted from @lock2020.

```{r}
library(tidyverse)  # we use read_csv and glimpse from tidyverse
tips <- read_csv("https://uoepsy.github.io/data/RestaurantTips.csv")
head(tips)
```

Working with the "Tip_Avg" variable created last week, we can see our relative frequency table for all of our servers (A, B, and C) who were tipped either Above or Below the standard tipping rate in the US (i.e., 15%). 


```{r}
tips2 <- tips %>%
    mutate(Tip_Avg = ifelse(PctTip <= 15, 'Below', 'Above'))

rel_freq_tbl <- table(tips2$Server, tips2$Tip_Avg) %>%
    prop.table() %>%
    addmargins()
rel_freq_tbl
```


- What’s the probability of a customer tipping above average?

```{r}
# P(above) = 0.25477707 + 0.25477707 + 0.12738854
# P(above) = 0.63694268
```

```{r}
# indexing: table[row numbers, col numbers]
rel_freq_tbl[4, 1]
# or indexing: table[row names, col names]
rel_freq_tbl['Sum', 'Above']
```

$P(Above) ≈ 0.64$

- Given that the server is A, what's the probability of receiving an above average tip?

```{r}
#P(above | server A) = 0.25477707 / 0.38216561
#P(above | server A) = 0.6666667
```

$P(Above \mid Server A) ≈ 0.67$

- Given that the server is B, what's the probability of receiving an above average tip?

```{r}
#P(above | server B) = 0.25477707 / 0.41401274
#P(above | server B) = 0.6153846
```

$P(Above \mid Server B) ≈ 0.62$

- Given that the server is C, what's the probability of receiving an above average tip?

```{r}
#P(above | server C) = 0.12738854 / 0.20382166
#P(above | server C) = 0.625
```

$P(Above \mid Server C) ≈ 0.63$

- Is tipping above average independent of the server?

No, the events seem to be dependent, but very weakly. The conditional probabilities of tipping above average for each server are different from P(above), even though to a small degree. In particular, the probability of tipping above average after service from Server A is higher.

- Given that a server received a tip below average, what's the probability of them being Server A or B?

```{r}
# P( (server A ∪ server B) | below ) = 
# (P( server A ∩ below ) + P( server B ∩ below )) / P(below) = 
# (0.12738854  + 0.15923567) / 0.36305732 =
# 0.7894737 
```

$P((Server A \cup Server B) \mid Below) ≈ 0.79$

- Based on your analysis above, which server do you think offers the best customer service based on their tips?

Server A appears to offer the best service to their customers, based solely on their personal tips - they had a much higher probability of receiving an above average tip (67%) than a below average tip (33%).

<!-- - What’s the probability of the customer being served by server A **or** tipping below 15%? -->

<!-- ```{r} -->
<!-- # P(server A) = 0.38216561 -->
<!-- # P(below) = 0.36305732 -->
<!-- # P(server A ∩ below) = 0.12738854 -->

<!-- # P(server A) + P(below) - P(server A ∩ below) =  -->
<!-- # (0.38216561 + 0.36305732) - 0.12738854 = -->
<!-- # 0.6178344 ≈ 0.62 -->
<!-- ``` -->

<!-- $P(Server A \cup Below) ≈ 0.62$ -->

- To visualise our findings, we could use a conditional mosaic plot:

```{r}
#| label: fig-mos_cond_plot
#| fig-cap: "Conditional Association between Servers and Tips"
library(ggmosaic)
mos_cond_plot <- ggplot(tips2) +
    geom_mosaic(aes(x = product(Tip_Avg), fill = Tip_Avg, conds = product(Server))) +  
    labs(title = "Conditional Association between Servers and Tips", 
         x = "Server", 
         y = "Tip Average", 
         fill = "Tip Average")
mos_cond_plot
```

:::{.callout-tip}
#### Example writeup

It was more likely for customers to tip above (64%) than below (36%) average. Though it was likely that all servers would receive an above average tip, tipping did not appear to be independent of server, based on conditional probabilities. Based on their personal tips, Server A appeared to offer the best service, where they were more likely to receive an above average tip (67%). Servers B and C were almost equally likely to receive above average tips (62% and 63% respectively). These associations are visually represented in @fig-mos_cond_plot.

:::


::: {.callout-note collapse="true"}
### Advanced material: Three definitions of independence

Recall the frequency table

```{r}
rel_freq_tbl
```

The following three definitions of independence are equivalent. Two events $A$ and $B$ are independent if one of these holds:

- $P(A | B) = P(A)$
- or $P(B | A) = P(B)$
- or $P(A \cap B) = P(A) P(B)$

For now, let's focus on the third definition. To see if tipping above average is independent of the specific server, we can checks that condition separately for each server:

A. Is $P(Server A \cap Above)$ equal to $P(Server A) P(Above)$?

```{r}
# 0.25477707 is P(Server A ∩ Above)
0.38216561 * 0.63694268 # P(Server A) * P(Above)
```

B. Is $P(Server B \cap Above)$ equal to $P(Server B) P(Above)$?

```{r}
# 0.25477707 is P(Server B ∩ Above)
0.41401274 * 0.63694268 # P(Server B) * P(Above)
```

C. Is $P(Server C \cap Above)$ equal to $P(Server C) P(Above)$?

```{r}
# 0.12738854 is P(Server C ∩ Above)
0.20382166 * 0.63694268 # P(Server C) * P(Above)
```

For server A and B, the values are close enough but not exactly equal. However, for server C, the values are identical up to the 2nd decimal place. This suggests the events are dependent, but to a small extent.
:::


## Student Glossary

To conclude the lab, add the new functions to the glossary of `R` functions. 

| Function   | Use and package |
|:-----------|:--------------|
| ` |  `     | ? |
| `/`        | ? |
| ` conds  ` | ? |

