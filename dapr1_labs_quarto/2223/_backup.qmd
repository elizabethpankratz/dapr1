:::{.callout-tip collapse="true"}

### Report B Structure

````
---
title: "Formative report B"
author: "Group ?.?"
date: "Write the date here"
output: bookdown::pdf_document2
toc: false
---
````

::: {.column-margin}
This is the **metadata** block. It includes the:

- document title
- author name
- date (to leave empty, use an empty string `""`)
- the output type

The output type could be `html_document`, `pdf_document`, etc.   
We use `bookdown::pdf_document2` so that we can reference figures, which `pdf_document` doesn't let you do.  
The code `bookdown::pdf_document2` simply means to use the `pdf_document2` type from the `bookdown` package.  
The code `toc: false` hides the table of contents.
:::

<br><br><br><br><br><br><br><br><br><br><br><br><br><br>

````
```{{r setup, include=FALSE}}
knitr::opts_chunk$set(echo=FALSE, message=FALSE, warning=FALSE)
```
````

:::{.column-margin}
This is the **setup chunk** and should always be included in your Rmd document. It sets the global options for **all** code chunks that will follow.

- If `echo=TRUE`, the R code in chunks is displayed. If FALSE, not.
- If `message=TRUE`, information messages are displayed. If FALSE, not.
- If `warning=TRUE`, warning messages are printed. If FALSE, not.

If you want to change the setting in a specific code chunk, you can do so via:
````
```{{r, echo=FALSE}}
# A code chunk
```
````
:::

<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>

````
```{{r, include=FALSE}}
# week 7 code below
library(tidyverse)

# week 8 code below
pltEye <- ggplot(starwars, aes(x = eye_color)) + 
    geom_bar()

# week 9 code below

# week 10 code below

# week 11 code below
```
````

:::{.column-margin}
This code chunks contains your rough work from each week. Give names to plots and tables, so that you can reference those later on. The option `include=FALSE` hides both code and output.  
To run each line of code while you are working, put your cursor on the line and press Control + Enter on Windows or Command + Enter on a macOS.
:::


````
## Introduction

Write here an introduction to the data, the variables, and anything worth of notice in the data.


## Analysis

Present here your tables, plots, and results. In the code chunk below, you do 
not need to put the chunk option `echo=FALSE` as you set this option globally 
in the setup chunk. 

```{{r}}
pltEye
```

If you didn't set it globally, you would need to put it in the chunk options:

```{{r, echo=FALSE}}
pltEye
```

More text...


## Discussion

Write up your take home messages here...
````

:::{.column-margin}
This contains your actual textual reporting, as well as tables and figures. To show in place a plot previously created, just include the plot name in a code chunk with the option `echo = FALSE` to hide the code but display the output.
:::


````
## Appendix A - Additional tables and figures

Insert here any additional tables or figures that you could not fit in the 
6-page limit.
````


````
## Appendix B - R code

```{{r, echo=TRUE, results='hide', fig.show='hide'}}
# copy and paste here all your R code

# week 1 code below
library(tidyverse)

# week 2 code below
pltEye <- ggplot(starwars, aes(x = eye_color)) + 
    geom_bar()

# week 3 code below

# week 4 code below
```

````

:::{.column-margin}
This allows the marker to see the code you used to obtain your results. Please note that only the code should be visible in the appendix, no output.  
The chunk options `echo=TRUE`, `results='hide'`, `fig.show='hide'` ensure that the appendix code is visible (echo=TRUE), the output is hidden (results='hide'), and figures are hidden (fig.show='hide').

The appendix does not count towards the 4-page limit.
:::


- Knit the document to PDF

- Submit the PDF file on Learn:
    + Go to the Learn page of the course
    + Click Assessments on the left-hand side menu
    + Click Report submission
    + Click Formative Report B
    + Follow the instructions


:::{.callout-tip collapse="true"}
### Referencing figures

First, you need to pick a **unique** label for the code chunk that displays the figure, in this case `short-label` but you should use a more descriptive name.

````
```{{r short-label, fig.cap = "Figure caption"}}
pltEye <- ggplot(starwars, aes(x = eye_color)) + 
    geom_bar() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
pltEye
```
````

```{r short-label, fig.cap = "Figure caption", echo=FALSE}
pltEye <- ggplot(starwars, aes(x = eye_color)) + 
    geom_bar() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
pltEye
```

```
To reference a figure, for example the one above, you would 
write see Figure \@ref(fig:short-label).
```

which, when you Knit to PDF, becomes:

To reference a figure, for example the one above, you would write see Figure 1.
:::


:::{.callout-tip collapse="true"}
### Referencing tables

First, you need to pick a **unique** label for the code chunk that displays the table, in this case `tbl-short-label` but you should use a more descriptive name.

````
```{{r tbl-short-label, echo=FALSE}}
library(kableExtra)
tblEye <- starwars %>%
    count(eye_color) %>%
    kbl(booktabs = TRUE, caption = "Short table caption")
tblEye
```
````

```{r echo=F}
library(kableExtra)
tblEye <- starwars %>%
    count(eye_color) %>%
    kbl(caption = "Short table caption") %>%
    kable_styling(full_width = FALSE)
tblEye
```

```
The table is referenced as, see Table \@ref(tab:tbl-short-label).
```

Which, when you knit to PDF, is displayed as:

The table is referenced as, see Table 1.

For details on styling PDF tables, see [this link](https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_pdf.pdf).

:::

:::{.callout-tip collapse="true"}
### Reducing figure size

You could place multiple panels into a single figure using the functions `|` and `/` from the `patchwork` package.

You could adjust the figure height and width by playing with a few options for the numbers `fig.height = ?` and `fig.width = ?`, for example 5 and 4, or 12 and 8, and so on. Please note this is typically found by trial and error. Keep in mind, however, that the figure labels should still be legible in the plot you show.

````
```{{r, fig.height = 5, fig.width = 4}}
# your code to display the figure here
```
````

:::

:::{.callout-tip collapse="true"}
### Hiding R code or ouput

:::{.panel-tabset}
#### Hiding R code

To not show the code of an R code chunk, and only show the output, write:

````
```{{r, echo=FALSE}}
# code goes here
```
````

#### Hiding R output

To show the code of an R code chunk, but hide the output, write:

````
```{{r, results='hide'}}
# code goes here
```
````

To hide both text output and figures, use:

````
```{{r, results='hide', fig.show='hide'}}
# code goes here
```
````

#### Hiding R code and output

To hide both code and output of an R code chunk, write:

````
```{{r, include=FALSE}}
# code goes here
```
````
:::
:::

:::
